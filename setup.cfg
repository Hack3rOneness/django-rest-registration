[bumpversion]
current_version = 0.8.1
commit = True
tag = True
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)
serialize =
	{major}.{minor}.{patch}

[isort]
line_length = 88
skip = migrations, examples, .venv, .tox
known_third_party = django_dynamic_fixture
known_first_party = rest_registration
multi_line_output = 3

[flake8]
max-line-length = 88
exclude = migrations, examples, build, .venv, .tox

[pylint]
ignore = migrations, examples, build, .venv, .tox
ignore-docstrings = yes
const-rgx = ([a-z_][a-z0-9_]{3,30}|[A-Z_][A-Z0-9_]{3,30})
good-names = i, j, k, db
min-public-methods = 0
max-args = 6
disable =
	missing-docstring,
	unused-argument,
	unused-import,
	line-too-long,
	ungrouped-imports,
	fixme,
	consider-using-f-string,
score = no
generated-members =
	objects
	from_queryset
	__setattr__
	DoesNotExist
	Meta
	_meta

[pylint:similarities]
min-similarity-lines = 5
ignore-imports = yes

[pylint:design]
max-parents = 10

[mypy]
plugins =
	mypy_django_plugin.main,
	mypy_drf_plugin.main

[mypy.plugins.django-stubs]
django_settings_module = tests.default_settings

[tool:pytest]
DJANGO_SETTINGS_MODULE = tests.default_settings
django_find_project = false
addopts = --doctest-modules
testpaths =
	tests
	rest_registration

[coverage:run]
branch = True
source =
	rest_registration

[coverage:report]
exclude_lines =
	pragma: no cover

	def __repr__

	raise AssertionError
	raise NotImplementedError

	if __name__ == .__main__.:
	if TYPE_CHECKING:
ignore_errors = True

[coverage:html]
directory = coverage_html_report

[bumpversion:file:rest_registration/_version.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"
